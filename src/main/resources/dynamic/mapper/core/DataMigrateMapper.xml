<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paladin.qos.dynamic.mapper.core.DataMigrateMapper">

	<select id="selectDataForMySql" resultType="Map">
		SELECT ${selectColumns} FROM ${tableName} 
		WHERE ${updateTimeField} &gt;= #{startTime}
		<if test="endTime != null">
			AND ${updateTimeField} &lt;= #{endTime}
		</if>
		ORDER BY ${updateTimeField} ASC LIMIT ${limit}
	</select>
	
	<select id="selectDataForMySql2" resultType="Map">
		SELECT ${selectColumns} FROM ${tableName} 
		WHERE ${updateTimeField} IS NULL 
		AND ${createTimeField} &gt;= #{startTime}
		<if test="endTime != null">
			AND ${createTimeField} &lt;= #{endTime}
		</if>
		ORDER BY ${createTimeField} ASC LIMIT ${limit}
	</select>
	
	<select id="selectDataForSqlServer" resultType="Map">
		SELECT TOP ${limit} ${selectColumns} FROM ${tableName} 
		WHERE ${updateTimeField} &gt;= #{startTime}
		<if test="endTime != null">
			AND ${updateTimeField} &lt;= #{endTime}
		</if>
		ORDER BY ${updateTimeField} ASC
	</select>
	
	<select id="selectDataForSqlServer2" resultType="Map">
		SELECT TOP ${limit} ${selectColumns} FROM ${tableName} 
		WHERE ${updateTimeField} IS NULL 
		AND ${createTimeField} &gt;= #{startTime}
		<if test="endTime != null">
			AND ${createTimeField} &lt;= #{endTime}
		</if>
		ORDER BY ${createTimeField} ASC
	</select>
	
	<select id="selectDataForOracle" resultType="Map">
		SELECT * FROM (
		SELECT ${selectColumns} FROM ${tableName} 
		WHERE ${updateTimeField} &gt;= to_date('${startTime}','yyyy-mm-dd hh24:mi:ss')
		<if test="endTime != null">
			AND ${updateTimeField} &lt;= to_date('${endTime}','yyyy-mm-dd hh24:mi:ss')
		</if>
		ORDER BY ${updateTimeField} ASC
		) WHERE rownum &lt;= ${limit}		
	</select>
	
	<select id="selectDataForOracle2" resultType="Map">
		SELECT * FROM (
		SELECT ${selectColumns} FROM ${tableName} 
		WHERE ${updateTimeField} IS NULL 
		AND ${createTimeField} &gt;= to_date('${startTime}','yyyy-mm-dd hh24:mi:ss')
		<if test="endTime != null">
			AND ${createTimeField} &lt;= to_date('${endTime}','yyyy-mm-dd hh24:mi:ss')
		</if>
		ORDER BY ${createTimeField} ASC
		) WHERE rownum &lt;= ${limit}		
	</select>
	
	<select id="selectDataForOracleToMillisecond" resultType="Map">
		SELECT * FROM (
		SELECT ${selectColumns} FROM ${tableName} 
		WHERE ${updateTimeField} &gt;= to_timestamp('${startTime}','yyyy-mm-dd hh24:mi:ss.ff')
		<if test="endTime != null">
			AND ${updateTimeField} &lt;= to_timestamp('${endTime}','yyyy-mm-dd hh24:mi:ss.ff')
		</if>		
		ORDER BY ${updateTimeField} ASC
		) WHERE rownum &lt;= ${limit}
	</select>
	
	<select id="selectDataForOracleToMillisecond2" resultType="Map">
		SELECT * FROM (
		SELECT ${selectColumns} FROM ${tableName} 
		WHERE ${updateTimeField} IS NULL
		AND ${createTimeField} &gt;= to_timestamp('${startTime}','yyyy-mm-dd hh24:mi:ss.ff')
		<if test="endTime != null">
			AND ${createTimeField} &lt;= to_timestamp('${endTime}','yyyy-mm-dd hh24:mi:ss.ff')
		</if>		
		ORDER BY ${createTimeField} ASC
		) WHERE rownum &lt;= ${limit}
	</select>
	

	<insert id="insertData">
		 INSERT INTO ${tableName}
        <foreach collection="dataMap.keys" item="key" separator="," open="(" close=")">
            ${key}
        </foreach>
        VALUES
        <foreach collection="dataMap.keys" item="key" separator="," open="(" close=")">
            #{dataMap[${key}]}
		</foreach>
	</insert>
	
	<update id="updateData">
		UPDATE ${tableName} SET
		<foreach collection="dataMap.entrySet()" item="value" index="key" separator=",">
			${key}=#{value}
		</foreach>
		<where>
			<foreach collection="primaryMap.entrySet()" item="value" index="key" separator=",">
				AND ${key}=#{value}
			</foreach>
		</where>
	</update>

	<select id="getMaxUpdateTime" resultType="Date">
		SELECT ${updateTimeField} FROM ${tableName} ORDER BY ${updateTimeField} DESC LIMIT 1
	</select>
	
	<select id="getMaxUpdateTime2" resultType="Date">
		SELECT ${createTimeField} FROM ${tableName} WHERE ${updateTimeField} IS NULL ORDER BY ${createTimeField} DESC LIMIT 1
	</select>
	
	<select id="getMaxUpdateTimeByYear" resultType="String">
		SELECT ${updateTimeField} FROM ${tableName} ORDER BY ${updateTimeField} DESC LIMIT 1
	</select>
	
	<select id="selectDataByYear" resultType="Map">
		SELECT ${selectColumns} FROM ${tableName}
		WHERE ${updateTimeField} IN
		<foreach collection="years" item="year" separator="," open="(" close=")">
            #{year}
        </foreach>
	</select>
	
	

</mapper>
